{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle the ui of the phone field input.\n *\n * @module     profilefield_phone/form\n * @copyright  2025 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\n\nclass PhoneForm {\n    /** @type {NodeJS.Timeout} */\n    searchTimeout;\n    /** @type {JQuery<HTMLElement>} */\n    groupContainer;\n    /** @type {JQuery<HTMLElement>} */\n    hiddenSelect;\n    /** @type {JQuery<HTMLElement>} */\n    searchInput;\n    /** @type {String} */\n    currentSelectedValue;\n\n    /**\n     * Create a phone form element class to handle phone element.\n     * @param {String} name The phone element name.\n     * @param {String} formid The mform id contains the element.\n     */\n    constructor(name, formid) {\n        let mform = $('form#' + formid);\n        this.groupContainer = mform.find('.profilefield_phone.phone-input-group.fitem[data-groupname=\"' + name + '\"]');\n        this.hiddenSelect = this.groupContainer.find('select[name=\"' + name + '[code]\"]');\n\n        // Ugly hack to remove flex-wrap class from the group.\n        // This prevent the elements code and number to be wrapped under each others.\n        this.groupContainer.find('div[data-fieldtype=\"group\"] fieldset div.flex-wrap').removeClass('flex-wrap');\n\n        this.identifySearchInput();\n    }\n\n    /**\n     * Register the event listeners.\n     */\n    register() {\n        this.currentSelectedValue = this.hiddenSelect.val();\n        if (this.currentSelectedValue) {\n            this.searchInput.attr('placeholder', this.getPhoneCode(this.currentSelectedValue));\n        }\n\n        let self = this;\n        this.hiddenSelect.on('change', function() {\n            self.currentSelectedValue = $(this).val();\n            let code = self.getPhoneCode(self.currentSelectedValue);\n            self.searchInput.attr('placeholder', code);\n        });\n    }\n\n    /**\n     * Get the phone code from the country code.\n     * @param {String} country\n     */\n    getPhoneCode(country) {\n        let text = this.hiddenSelect.find('option[value=\"' + country + '\"]').text();\n        return text.match(/\\+\\d+/g).shift();\n    }\n\n    /**\n     * Identify the search input.\n     * The autocomplete element in MoodleQuickForm take a while\n     * to get rendered by js and the search input to be in the DOM.\n     */\n    identifySearchInput() {\n        clearTimeout(this.searchTimeout);\n        this.searchInput = this.groupContainer.find('input[type=\"text\"][data-fieldtype=\"autocomplete\"]');\n        if (this.searchInput.length > 0) {\n            this.register();\n        } else {\n            let freezed = this.groupContainer.find('span[data-fieldtype=\"autocomplete\"]');\n            if (freezed.length > 0 && freezed.find('select').length === 0) {\n                freezed.text(freezed.text().match(/\\+\\d+/g).shift());\n                return;\n            }\n\n            this.searchTimeout = setTimeout(this.identifySearchInput, 100);\n        }\n    }\n}\n\nexport const init = function(name, formid) {\n    new PhoneForm(name, formid);\n};\n"],"names":["PhoneForm","searchTimeout","groupContainer","hiddenSelect","searchInput","currentSelectedValue","constructor","name","formid","mform","find","this","removeClass","identifySearchInput","register","val","attr","getPhoneCode","self","on","code","country","text","match","shift","clearTimeout","length","freezed","setTimeout"],"mappings":";;;;;;;gJAyBMA,UAEFC,cAEAC,eAEAC,aAEAC,YAEAC,qBAOAC,YAAYC,KAAMC,YACVC,OAAQ,mBAAE,QAAUD,aACnBN,eAAiBO,MAAMC,KAAK,+DAAiEH,KAAO,WACpGJ,aAAeQ,KAAKT,eAAeQ,KAAK,gBAAkBH,KAAO,iBAIjEL,eAAeQ,KAAK,sDAAsDE,YAAY,kBAEtFC,sBAMTC,gBACST,qBAAuBM,KAAKR,aAAaY,MAC1CJ,KAAKN,2BACAD,YAAYY,KAAK,cAAeL,KAAKM,aAAaN,KAAKN,2BAG5Da,KAAOP,UACNR,aAAagB,GAAG,UAAU,WAC3BD,KAAKb,sBAAuB,mBAAEM,MAAMI,UAChCK,KAAOF,KAAKD,aAAaC,KAAKb,sBAClCa,KAAKd,YAAYY,KAAK,cAAeI,SAQ7CH,aAAaI,gBACEV,KAAKR,aAAaO,KAAK,iBAAmBW,QAAU,MAAMC,OACzDC,MAAM,UAAUC,QAQhCX,yBACIY,aAAad,KAAKV,oBACbG,YAAcO,KAAKT,eAAeQ,KAAK,qDACxCC,KAAKP,YAAYsB,OAAS,OACrBZ,eACF,KACCa,QAAUhB,KAAKT,eAAeQ,KAAK,0CACnCiB,QAAQD,OAAS,GAAuC,IAAlCC,QAAQjB,KAAK,UAAUgB,mBAC7CC,QAAQL,KAAKK,QAAQL,OAAOC,MAAM,UAAUC,cAI3CvB,cAAgB2B,WAAWjB,KAAKE,oBAAqB,qBAKlD,SAASN,KAAMC,YAC3BR,UAAUO,KAAMC"}