{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle the ui of the phone field input.\n *\n * @module     profilefield_phone/form\n * @copyright  2025 Mohammad Farouk <phun.for.physics@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\n/** @type {JQuery<HTMLElement>} */\nlet groupContainer;\n/** @type {JQuery<HTMLElement>} */\nlet hiddenSelect;\n/** @type {JQuery<HTMLElement>} */\nlet searchInput;\n/** @type {String} */\nlet currentSelectedValue;\n/** @type {NodeJS.Timeout} */\nlet searchTimeout;\n/**\n * Register the event listeners.\n */\nfunction register() {\n    currentSelectedValue = hiddenSelect.val();\n    if (currentSelectedValue) {\n        searchInput.attr('placeholder', getPhoneCode(currentSelectedValue));\n    }\n\n    hiddenSelect.on('change', function() {\n        currentSelectedValue = $(this).val();\n        let code = getPhoneCode(currentSelectedValue);\n        searchInput.attr('placeholder', code);\n    });\n}\n\n/**\n * Get the phone code from the country code.\n * @param {String} country\n */\nfunction getPhoneCode(country) {\n    let text = hiddenSelect.find('option[value=\"' + country + '\"]').text();\n    return text.match(/\\+\\d+/g).shift();\n}\n\n/**\n * Identify the search input.\n */\nfunction identifySearchInput() {\n    clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(function() {\n        searchInput = groupContainer.find('input[type=\"text\"][data-fieldtype=\"autocomplete\"]');\n        if (searchInput.length > 0) {\n            register();\n        } else {\n            identifySearchInput();\n        }\n    }, 100);\n}\n\nexport const init = function(name) {\n    groupContainer = $('.profilefield_phone.phone-input-group.fitem[data-groupname=\"' + name + '\"]');\n    hiddenSelect = groupContainer.find('select[name=\"' + name + '[code]\"]');\n\n    // Ugly hack to remove flex-wrap class from the group.\n    groupContainer.find('div[data-fieldtype=\"group\"] fieldset div.flex-wrap').removeClass('flex-wrap');\n    identifySearchInput();\n};\n"],"names":["groupContainer","hiddenSelect","searchInput","currentSelectedValue","searchTimeout","getPhoneCode","country","find","text","match","shift","identifySearchInput","clearTimeout","setTimeout","length","val","attr","on","this","code","name","removeClass"],"mappings":";;;;;;;SAyBIA,eAEAC,aAEAC,YAEAC,qBAEAC,uBAqBKC,aAAaC,gBACPL,aAAaM,KAAK,iBAAmBD,QAAU,MAAME,OACpDC,MAAM,UAAUC,iBAMvBC,sBACLC,aAAaR,eACbA,cAAgBS,YAAW,WACvBX,YAAcF,eAAeO,KAAK,qDAC9BL,YAAYY,OAAS,GA5B7BX,qBAAuBF,aAAac,MAChCZ,sBACAD,YAAYc,KAAK,cAAeX,aAAaF,uBAGjDF,aAAagB,GAAG,UAAU,WACtBd,sBAAuB,mBAAEe,MAAMH,UAC3BI,KAAOd,aAAaF,sBACxBD,YAAYc,KAAK,cAAeG,UAuB5BR,wBAEL,wJAGa,SAASS,MACzBpB,gBAAiB,mBAAE,+DAAiEoB,KAAO,MAC3FnB,aAAeD,eAAeO,KAAK,gBAAkBa,KAAO,YAG5DpB,eAAeO,KAAK,sDAAsDc,YAAY,aACtFV"}